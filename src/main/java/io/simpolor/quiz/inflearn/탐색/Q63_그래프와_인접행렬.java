package io.simpolor.quiz.inflearn.탐색;

/**
 * 그래프(G)는 버텍스(V), 엣지(E)
 * V: 노트
 * E: 선(연결)
 *
 * 선은 양방향이라고 생각하면 된다.
 * 예제는 도시와 도로라고 생각한다. ( 무방향 그래프 )
 * 1 - 2 - 5
 * |   |
 * 3 - 4
 *
 * 연결 정보
 * a b
 * 1 2
 * 1 3
 * 2 4
 * 3 4
 * 2 5
 *
 * 프로그래밍 표현(인접 행렬) 연결정보를 표현 ( 행에서 열로 이도ㅓㅇ한다 )
 *   1 2 3 4 5
 * 1 0 1 1 0 0
 * 2 1 0 0 1 1
 * 3 1 0 0 1 0
 * 4 0 1 1 0 0
 * 5 0 1 0 0 0
 *
 * graph[a][b] = 1
 * graph[b][a] = 1
 *
 * 보는 방법은 1행부터 탐색하여 체크된 정접만 판단
 *
 *
 * 예제는 도시와 도로라고 생각한다. ( 방향 그래프 )
 * 1 - 2 - 5
 * |   |
 * 3 - 4
 *
 * a b
 * 1 2
 * 1 3
 * 3 4
 * 4 2
 * 2 5
 *
 * graph[a][b] = 1 ( 행 -> 열 )
 *
 *   1 2 3 4 5
 * 1 0 1 1 0 0
 * 2 0 0 0 0 1
 * 3 0 0 0 1 0
 * 4 0 1 0 0 0
 * 5 0 0 0 0 0
 *
 *
 *
 예제는 도시와 도로라고 생각한다. ( 가중치 방향 그래프 )
 * 1 -(2)- 2 -(5)- 5
 * |       |
 * (4)    (2)
 * |       |
 * 3 -(5)- 4
 *
 * 1 2 2
 * 1 3 4
 * 3 4 5
 * 4 2 2
 * 2 5 5
 *
 * graph[a][b] = c ( 행 -> 열 )
 *
 *   1 2 3 4 5
 * 1 0 2 4 0 0
 * 2 0 0 0 0 5
 * 3 0 0 0 5 0
 * 4 0 2 0 0 0
 * 5 0 0 0 0 0
 */
public class Q63_그래프와_인접행렬 {

    public static void main(String[] args) {


    }
}
