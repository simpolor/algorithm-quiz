package io.simpolor.quiz.doit.chapter10;

/***
 * 트리
 * - 트리는 구성하는 요소는 노드(node)와 가지(edge)입니다.
 * - 각각의 노드는 가지를 통해 다른 노드와 연결되어 있습니다.
 *
 * 루트
 * - 트리의 가장 윗부분에 위치하는 노드를 루트(root)라고 합니다.
 * - 하나의 트리에는 하나의 루트가 있습니다.
 *
 * 리프
 * - 트리의 가장 아랫부분을 위치하는 노드를 리프(leaf)라고 합니다.
 * - 물리적으로 가장 아랫부분에 위치한다는 의미가 아니라, 더 이상 뻗어나갈 수 없는 마지막에 노드가 위치한다는 의미입니다.
 *
 * 안쪽 노드
 * - 루트를 포함하여 리프를 제외한 노드를 안쪽 노드라고 합니다.
 *
 * 자식
 * - 어떤 노드로부터 가지로 연결된 아래쪽 노드를 자식(child)이라고 합니다.
 * - 노드는 자식을 여러개 가질 수 있습니다.
 *
 * 부모
 * - 어떤 노드에서 가지로 연결된 위쪽 노드를 부모(parent)라고 합니다.
 * - 노드는 1갸의 부모를 가집니다
 *
 * 형제
 * - 같은 부모를 가지는 도르르 형제(sibling)라고 합니다.
 *
 * 조상
 * - 어떤 노드에서 가지로 연결된 위쪽 노드 모두를 조상(ancestor)이라고 합니다.
 *
 * 자손
 * - 어/던 노드에서 가지로 연결된 아래쪽 노드를 모두 자손(descendant)이라고 합니다.
 *
 * 레벨
 * - 루트로부터 얼마나 떨어져있는지에 대한 값을 레벨(level)이라고 합니다.
 * - 루트의 레벨은 0이고 루트로부터 가지가 하나씩 아내로 뻗어나갈 때 마다 레벨이 1씩 늘어납니다.
 *
 * 차수
 * - 노드가 갖는 자식의 수를 차수(degree)라고 합니다
 * - 모든 노드의 차수가 n 이하인 트리를 n진 트리라고 합니다.
 *
 * 높이
 * - 루트로 부터 가장 멀리 떨어진 리프까지의 거리(리프 레벨의 최댓값)를 높이라고 합니다.
 *
 * 서브 트리
 * - 트리 안에서 다시 어떤 노드를 루트를 정하고 그 자손으로 이루어진 트리를 서브 트리(subtree)라고 합니다.
 * - 갈색으로 표시한 부분 x를 루트로하는 서브 트리입니다.
 *
 * 널 트리
 * - 노드, 가지가 없는 트리를 널 트리(null tree)라고합니다
 *
 * 순서 트리와 무순서 트리
 * - 형제 노드의 순서가 있는지 없는지에 따라 트리를 두 종류로 분류합니다.
 * - 형제의 순서를 따지면, 순서 트리
 * - 따지지 않으면, 무순서 트리
 *
 *
 * 순서 트리 탐색
 * - 너비 우선 탐색(breath-frist search) : 낲은 레벨서 시작해 왼쪽에서 오른 방향으로 검색하고, 한 레벨에서 검색이 끝나면 다음 레벨로 내려갑니다.
 * - 깊이 우선 탐색(depth-first search) : 리플까지 내려가먄서 검색하는 것을 우선 순위로하는 탐색 방법입니다.
 *                 리프에 도달해 더이상 검을 진행할 곳이 없는 경우 부모에게 돌아갑니다. 그리고 다시 자식 노드로 탐색합니다.
 * - 전위 순회(Preorder) : 노드 방문 -> 왼쪽 자식 -> 오른쪽 자식
 * - 중위 순회(Inoreder) : 왼쪽 자식 -> 노드 방문 - > 오른쪽 자식
 * - 후위 순회(Postorder) : 왼쪽 자식 -> 오른쪽 자식 -> (돌아외) 노드 방문
 *
 *
 * 이진트리
 * - 노드가 왼쪽 자식과 오른쪽 자식을 갖는 트리를 이진 트리(binary tree)라고 합니다.
 * - 각 노드의 자식은 2명 이하만 유지해야합니다.
 *
 * 완전이진트리
 * - 루트부터 노드가 채워져 있으면서, 각 레벨에서 왼쪽에서 오른쪽 노드가 채워져 있는 이진트리를 완전이진트리(complete binary tree)라고 합니다.
 * - 마지막 레벨을 제외한 레벨은 노드를 가득 채웁니다.
 *
 * 이진검색트리
 * - 어떤 노드 N을 기준으로 왼쪽 서브 트리 노드의 모든 키 값은 N의 키 값보다 작아야합니다.
 * - 오른쪽 서브 트리 노드의 키 값은 노드 N의 키 값보다 커야합니다.
 * - 같은 키 값을 갖는 노드는 없습니다.
 *
 *
 * 해시법
 *
 */